stages:
  - prepare
  - test
  - deploy

variables:
  APP_ENV: testing
  DB_HOST: mysql
  DB_DATABASE: laravel
  DB_USERNAME: laravel
  DB_PASSWORD: secret

services:
  - mysql:8

before_script:
  - apt-get update && apt-get install -y unzip git curl zip libzip-dev libpng-dev libonig-dev libxml2-dev libcurl4-openssl-dev libicu-dev libssl-dev netcat-traditional
  - docker-php-ext-install pdo_mysql zip intl mbstring curl xml gd bcmath exif
  - curl -sS https://getcomposer.org/installer | php
  - mv composer.phar /usr/local/bin/composer
  - cp app/mylaravelapp/.env.example .env
  - composer install
  - php artisan key:generate
  - php artisan migrate --force

test:
  stage: test
  script:
    - php artisan test

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh rsync
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
  script:
    - echo "Deploying Laravel app files to remote server..."
    - rsync -avz --delete \
        --exclude '.git' \
        --exclude 'node_modules' \
        --exclude 'tests' \
        --exclude '.env' \
        ./ $SSH_USER@$SSH_HOST:$DEPLOY_PATH_APP

    - echo "Deploying public assets to public_html..."
    - rsync -avz --delete ./public/ $SSH_USER@$SSH_HOST:$DEPLOY_PATH_PUBLIC/

    - echo "Deployment completed successfully."
  only:
    - main

